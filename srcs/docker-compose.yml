
version: '3.1'
services:
  # adminer:
  #   image: adminer
  #   ports:   
  #     - "8081:8080"
  #   depends_on:
  #     - mariadb
  #   networks:
  #     - docker-network

  redis:
    build:
      context: ./requirements/bonus
      dockerfile: Dockerfile
    restart: always
    container_name: redis
    ports:
      - "6379:6379"
    # volumes:
    #   - :/data
    networks:
      - docker-network

  mariadb:
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    restart: always
    container_name: mariadb
    ports:
      - "3306:3306"
    env_file:
      - ./.env
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - docker-network

  nginx:
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - wordpress-php
    container_name: nginx
    ports:
      - "443:443"
    volumes:
      - ./requirements/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - docker-network

  wordpress-php:
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    restart: always
    container_name: wordpress-php
    ports:
      - "8888:80"
    environment:
      WORDPRESS_DB_HOST: mariadb:3306
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
    depends_on:
      - mariadb
      - redis
    networks:
      - docker-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 5


volumes:
  db_data:
    name: db_data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/oumaima/data/db
  wordpress_files:
    name: wordpress_files
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/oumaima/data/wordpress



networks:
  docker-network:
    driver: bridge
