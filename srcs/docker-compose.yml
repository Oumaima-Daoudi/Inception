
version: '3.1'
services:
  elasticsearch:
    build:
      context: ./requirements/bonus/elasticsearch
      dockerfile: Dockerfile
    restart: always
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers
    networks:
      - docker-network

  website:
    build:
      context: ./requirements/bonus/website
      dockerfile: Dockerfile
    restart: always
    container_name: website
    ports:
      - "4200:4200"
    networks:
      - docker-network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
      
  adminer:
    build:
      context: ./requirements/bonus/adminer
      dockerfile: Dockerfile
    restart: always
    container_name: adminer
    ports:   
      - "8081:8080"
    depends_on:
      - mariadb
    networks:
      - docker-network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  ftp:
    build:
      context: ./requirements/bonus/ftp
      dockerfile: Dockerfile
    restart: always
    container_name: ftp
    ports:
      - "20:20"
      - "21:21"
      - "10000-10100:10000-10100"
    volumes:
      - wordpress_files:/ftpuser/wordpress_files
    networks:
      - docker-network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  redis:
    build:
      context: ./requirements/bonus/redis
      dockerfile: Dockerfile
    restart: always
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - docker-network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  mariadb:
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    restart: always
    container_name: mariadb
    ports:
      - "3306:3306"
    env_file:
      - ./.env
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - docker-network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  nginx:
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - wordpress
    container_name: nginx
    ports:
      - "443:443"
    volumes:
      - wordpress_files:/var/www/html
    networks:
      - docker-network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  wordpress:
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    restart: always
    container_name: wordpress
    ports:
      - "8888:9000"
    # environment:
    #   WORDPRESS_DB_HOST: ${MARIADB_DB_HOST}
    #   WORDPRESS_DB_NAME: ${MARIADB_DATABASE}
    #   WORDPRESS_DB_USER: ${MARIADB_USER}
    #   WORDPRESS_DB_PASSWORD: ${MARIADB_PASSWORD}
    #   USER_PASS: ${USER_PASS}
    #   WP_SITEURL: ${WP_SITEURL}
    #   WP_HOME: ${WP_HOME}
    #   WP_REDIS_HOST: ${WP_REDIS_HOST}
    #   WP_REDIS_PORT: ${WP_REDIS_PORT}
    #   ADMIN_EMAIL: ${ADMIN_EMAIL}
    #   TITLE: ${TITLE}
    #   EDITOR_USER_NAME: ${EDITOR_USER_NAME}
    #   EDITOR_USER_EMAIL: ${EDITOR_USER_EMAIL}
    env_file:
      - ./.env
    depends_on:
      - mariadb
      - redis
    volumes:
      - wordpress_files:/var/www/html
    networks:
      - docker-network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"


volumes:
  db_data:
    name: db_data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/oumaima/data/db
  wordpress_files:
    name: wordpress_files
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/oumaima/data/wordpress



networks:
  docker-network:
    driver: bridge
